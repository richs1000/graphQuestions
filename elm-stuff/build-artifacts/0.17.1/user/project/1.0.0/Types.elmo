var _user$project$Types$emptyGraph = {
	nodes: _elm_lang$core$Native_List.fromArray(
		[]),
	edges: _elm_lang$core$Native_List.fromArray(
		[]),
	directional: true,
	weighted: true
};
var _user$project$Types$historyLength = 10;
var _user$project$Types$Model = F9(
	function (a, b, c, d, e, f, g, h, i) {
		return {graph: a, debug: b, userInput: c, history: d, bfs: e, question: f, success: g, feedback: h, randomValues: i};
	});
var _user$project$Types$Question = F4(
	function (a, b, c, d) {
		return {question: a, distractors: b, answer: c, format: d};
	});
var _user$project$Types$Edge = F4(
	function (a, b, c, d) {
		return {from: a, to: b, weight: c, direction: d};
	});
var _user$project$Types$Graph = F4(
	function (a, b, c, d) {
		return {nodes: a, edges: b, directional: c, weighted: d};
	});
var _user$project$Types$MultipleChoice = {ctor: 'MultipleChoice'};
var _user$project$Types$FillInTheBlank = {ctor: 'FillInTheBlank'};
var _user$project$Types$emptyQuestion = {
	question: '',
	distractors: _elm_lang$core$Native_List.fromArray(
		[]),
	answer: {ctor: '_Tuple2', _0: '', _1: ''},
	format: _user$project$Types$FillInTheBlank
};
var _user$project$Types$BiDirectional = {ctor: 'BiDirectional'};
var _user$project$Types$UniDirectional = {ctor: 'UniDirectional'};
var _user$project$Types$ToggleDirectional = {ctor: 'ToggleDirectional'};
var _user$project$Types$ToggleWeighted = {ctor: 'ToggleWeighted'};
var _user$project$Types$BreadthFirstSearch = {ctor: 'BreadthFirstSearch'};
var _user$project$Types$GiveFeedback = {ctor: 'GiveFeedback'};
var _user$project$Types$Submit = {ctor: 'Submit'};
var _user$project$Types$UserInput = function (a) {
	return {ctor: 'UserInput', _0: a};
};
var _user$project$Types$NewQuestion = function (a) {
	return {ctor: 'NewQuestion', _0: a};
};
var _user$project$Types$NewEdgeWeights = function (a) {
	return {ctor: 'NewEdgeWeights', _0: a};
};
var _user$project$Types$NewNodes = function (a) {
	return {ctor: 'NewNodes', _0: a};
};
var _user$project$Types$NewRandomValues = function (a) {
	return {ctor: 'NewRandomValues', _0: a};
};
var _user$project$Types$Reset = {ctor: 'Reset'};
